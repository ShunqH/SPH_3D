import argparse
import shutil

if shutil.which("g++-14"):
    cxx = "g++-14"
elif shutil.which("g++"):
    cxx = "g++"
else:
    raise RuntimeError("No g++ found")

# read from command 
parser = argparse.ArgumentParser(description="Configure which setup file to use")
parser.add_argument("--setup", type=str, default="setup",
                    help="Choose which setup file to use, e.g., blast")
parser.add_argument("--openmp", action="store_true", 
                    help="Enable OpenMP support")
args = parser.parse_args()

# select files
setup_dict = {
    "setup": "setup.cpp",
    "sod": "setup_sod.cpp",
    "3Dsod": "setup_3Dsod.cpp",
    "blast": "setup_blast.cpp",
}

if args.setup not in setup_dict:
    print(f"Error: unknown setup '{args.setup}'")
    print("Available setups:", ", ".join(setup_dict.keys()))
    exit(1)

setup_file = setup_dict[args.setup]

# 写入 config.mk
with open("config.mk", "w") as f:
    f.write("# Auto-generated by configure.py\n")
    f.write(f"CXX = {cxx}\n")
    f.write(f'SETUP = {setup_file}\n')
    f.write(f"USE_OPENMP = {1 if args.openmp else 0}\n")

print(f"Configuration done: ")
print()
print("compiler=",cxx)
print(f"SETUP={setup_file}")
print()
print(f'openmp {"enable" if args.openmp else "disable"}')
print()
